package view;

import java.awt.Component;
import java.awt.Image;
import java.util.ArrayList;

import javax.swing.ImageIcon;
import javax.swing.JTree;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeCellRenderer;

import model.Paket;
import model.PaketModel;
import model.Tabela;
import model.TableModel;


public class TreeCallRenderer extends DefaultTreeCellRenderer {

	
	public Component getTreeCellRendererComponent(JTree tree, Object value, boolean sel, boolean expanded, boolean leaf,
			int row, boolean hasFocus) {
		super.getTreeCellRendererComponent(tree, value, sel, expanded, leaf, row, hasFocus);

		// ÄŒvor koga treba iscrtati.
		DefaultMutableTreeNode node = (DefaultMutableTreeNode) value;
		Object o = node.getUserObject();
		//System.out.println(o.toString());

		if(o instanceof TableModel) {
			TableModel tm = (TableModel) o;
			setText(tm.getTabela().getTitle());
	
			ImageIcon ikonica = new ImageIcon("resources/table.png");
			Image img = ikonica.getImage();
			Image img2 = img.getScaledInstance(20, 20, java.awt.Image.SCALE_SMOOTH);
			ikonica = new ImageIcon(img2);
			setIcon(ikonica);
		}else if(o instanceof PaketModel) {
			PaketModel pm = (PaketModel) o;
			setText(pm.getPaket().getImePaketa());
	
			ImageIcon ikonica = new ImageIcon("resources/paket.png");
			Image img = ikonica.getImage();
			Image img2 = img.getScaledInstance(20, 20, java.awt.Image.SCALE_SMOOTH);
			ikonica = new ImageIcon(img2);
			setIcon(ikonica);
		}
	
	return this;
	}
}
